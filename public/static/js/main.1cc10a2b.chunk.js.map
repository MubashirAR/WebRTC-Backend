{"version":3,"sources":["logo.svg","apis/auth/index.js","apis/user/index.js","AppContext.js","pages/Home/index.js","pages/Login/index.js","pages/Register/index.js","pages/Call/index.js","components/HOC/AuthRedirect.js","pages/Connections/index.js","pages/MainView/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","defaults","withCredentials","headers","crossDomain","credentials","options","url","document","URL","split","length","includes","login","params","a","method","data","JSON","stringify","resp","response","logout","register","me","console","log","error","getConnections","userId","addConnection","connectionId","removeConnection","searchUser","React","createContext","useContext","AppContext","loggedInUser","className","username","href","useState","setUsername","password","setPassword","API","isLoggedIn","isCheckedLogin","submit","Auth","alert","msg","Home","to","type","placeholder","onChange","e","target","value","onClick","_","email","setEmail","confirmPassword","setConfirmPassword","playVideoFromCamera","isOnCall","name","id","autoPlay","playsInline","controls","props","children","isFetchingList","setIsFetchingList","connections","setConnections","searchKey","setSearchKey","searchResult","setSearchResult","useEffect","User","then","search","user","_id","find","c","map","key","isInit","setIsInit","setIsOnCall","context","otherUser","window","location","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","getConnectedDevices","enumerateDevices","devices","filter","d","kind","updateCameraList","cameras","listElement","querySelector","innerHTML","camera","cameraOption","createElement","label","deviceId","forEach","add","openCamera","cameraId","minWidth","minHeight","audio","echoCancellation","video","width","min","height","stream","srcObject","makeCall","caller","peerConnection","RTCPeerConnection","iceServers","urls","addEventListener","close","addStream","getSenders","dtmfSender","dtmf","selfCandidate","event","candidate","connectWith","socket","emit","remoteStream","MediaStream","track","addTrack","iceConnectionState","on","addIceCandidate","answer","remoteDesc","RTCSessionDescription","setRemoteDescription","createOffer","offer","setLocalDescription","selfVideoElement","answerer","from","createAnswer","io","message","init","answerCall","Connections","Call","path","component","exact","Login","Register","AuthRedirect","MainView","App","isCheckingLogin","setIsCheckingLogin","setIsCheckedLogin","setIsLoggedIn","setLoggedInUser","res","catch","Provider","Routes","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1cc10a2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\naxios.defaults.withCredentials = true;\nlet headers = {\n  'Content-Type': 'application/json',\n  crossDomain: true,\n  credentials: 'cross-origin'\n}\nlet options = {\n  withCredentials: true,\n  credentials: 'same-origin'\n}\nlet url = document.URL.split('/');\nif(url.length > 2 && url[2].includes('localhost')) {\n  url = '';\n} else {\n  url = 'https://mubashir-video-chat.herokuapp.com'\n}\nurl = '/api'\nexport const login = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/login',\n      method: 'POST',\n      headers,\n      data: JSON.stringify(params),\n      ...options\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const logout = async () => {\n  try {\n    let resp = await axios({\n      url: url + '/logout',\n      method: 'POST',\n      headers,\n      // data: JSON.stringify(params),\n      ...options\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const register = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/register',\n      method: 'POST',\n      headers,\n      data: JSON.stringify(params),\n      ...options\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const me = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/me',\n      method: 'get',\n      headers,\n      ...options\n    });\n    let { data } = resp;\n    return data;\n    \n  } catch (error) {\n    console.log({error})\n    // if(error.response && error.response.status === 401)\n    //   window.location.href = '/login'\n    throw error.response.data;\n  }\n};\nexport default {\n  me,\n  login,\n  logout,\n  register\n}","import axios from 'axios';\naxios.defaults.withCredentials = true;\nlet headers = {\n  'Content-Type': 'application/json',\n  crossDomain: true,\n  credentials: 'cross-origin',\n};\nlet options = {\n  withCredentials: true,\n  credentials: 'same-origin',\n};\nlet url = document.URL.split('/');\nif(url.length > 2 && url[2].includes('localhost')) {\n  url = '';\n} else {\n  url = 'https://mubashir-video-chat.herokuapp.com'\n}\nurl = '/api'\nconst getConnections = async userId => {\n  try {\n    let resp = await axios({\n      url: url + '/connection',\n      method: 'GET',\n      headers,\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst addConnection = async ({ connectionId }) => {\n  try {\n    let resp = await axios({\n      url: url + '/user/addConnection',\n      method: 'PUT',\n      headers,\n      data: JSON.stringify({ connectionId }),\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst removeConnection = async ({ connectionId }) => {\n  try {\n    let resp = await axios({\n      url: url + '/user/removeConnection',\n      method: 'PUT',\n      headers,\n      data: JSON.stringify({ connectionId }),\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst searchUser = async params => {\n  console.log({ params });\n  try {\n    let resp = await axios({\n      url: url + '/user/search',\n      method: 'GET',\n      headers,\n      params,\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport default {\n  getConnections,\n  addConnection,\n  removeConnection,\n  searchUser,\n};\n","import React from 'react';\nimport API from './apis';\nexport default React.createContext({});\n","import React, { useContext, Fragment } from 'react';\nimport { me } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nimport './style.css';\nexport default () => {\n  const {\n    data: { loggedInUser = {} },\n  } = useContext(AppContext);\n  return (\n    <div className=\"header\">\n      <div className=\"welcome-msg\">Welcome {loggedInUser.username}</div>\n      <div>\n        <ul>\n          {loggedInUser.username ? (\n            <a href=\"/connect\">\n              <li>Call</li>\n            </a>\n          ) : (\n            <Fragment>\n              <a href=\"/login\">\n                <li>Login</li>\n              </a>\n              <a href=\"/register\">\n                <li>Register</li>\n              </a>\n            </Fragment>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import { login, me } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nimport './style.css';\nimport Home from '../Home';\nexport default () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { API, isLoggedIn, isCheckedLogin } = useContext(AppContext);\n  const submit = async data => {\n    try {\n      let resp = await API.Auth.login(data);\n      alert(resp.msg);\n    } catch (error) {\n      console.log({ error });\n      alert(error.msg);\n    }\n  };\n  return (\n    <Fragment>\n      <Home/>\n      <div className=\"login-container\">\n        {isCheckedLogin ? (\n          isLoggedIn ? (\n            <Redirect to=\"/connect\" />\n          ) : (\n            <Fragment>\n              <h3>Login</h3>\n              <div>\n                <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} value={username}></input>\n                <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password}></input>\n              </div>\n              <button type=\"button\" onClick={_ => submit({ username, password })}>\n                Login\n              </button>\n            </Fragment>\n          )\n        ) : (\n          'loading'\n        )}\n      </div>\n    </Fragment>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { register } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nimport Home from '../Home';\nexport default () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const { API } = useContext(AppContext);\n  const submit = async data => {\n    try {\n      let resp = await API.Auth.register(data);\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg);\n    }\n  };\n  return (\n    <div>\n      <Home/>\n      <h3>Register</h3>\n      <div>\n        <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} value={username}></input>\n        <input type=\"email\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)} value={email}></input>\n      </div>\n      <div>\n        <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password}></input>\n        <input\n          type=\"password\"\n          placeholder=\"Repeat Password\"\n          onChange={e => setConfirmPassword(e.target.value)}\n          value={confirmPassword}\n        ></input>\n      </div>\n      <div>{password ? password === confirmPassword ? 'Passwords match' : 'Password do not match' : null}</div>\n      <button type=\"button\" onClick={_ => submit({ username, password, email })}>\n        Signup\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport './style.css';\n\nexport default ({ playVideoFromCamera, isOnCall }) => {\n  return (\n    <div>\n      {/* <input className=\"padding\" id=\"username\" type=\"text\" placeholder=\"Select your username\" />\n      <button id=\"submit\" placeholder=\"username\">\n        Submit\n      </button> */}\n      <div className={isOnCall ? 'padding hidden' : 'padding'}>\n        <select name=\"\" id=\"availableCameras\" placeholder=\"Choose camera\"></select>\n      </div>\n      {/* <div className={isOnCall ? 'padding hidden' : 'padding'}>\n        <input id=\"other-username\" type=\"text\" placeholder=\"Connect with\" />\n        <button id=\"start\" onClick={playVideoFromCamera}>Start</button>\n      </div> */}\n      <div id=\"caller-details\"></div>\n      <button className={isOnCall ? 'hidden': ''} id=\"answer\">Answer</button>\n      <div className={isOnCall ? '' : 'hidden'}>\n        <video id=\"self-video\" autoPlay playsInline controls=\"false\"></video>\n        <video id=\"other-video\" autoPlay playsInline controls=\"false\"></video>\n        <div>\n          <button id=\"disconnect\">Disconnect</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from \"../../AppContext\";\n\nexport default props => {\n  const { isCheckedLogin, isLoggedIn } = useContext(AppContext);\n  // return 'loading';\n  return isCheckedLogin ? isLoggedIn ? <Fragment>{props.children}</Fragment> : <Redirect to=\"/login\" /> : 'loading';\n};\n","import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport AppContext from '../../AppContext';\nimport './style.css'\nexport default ({ playVideoFromCamera }) => {\n  const [isFetchingList, setIsFetchingList] = useState(false);\n  const [connections, setConnections] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchResult, setSearchResult] = useState('');\n  const {\n    API,\n    data: { loggedInUser },\n  } = useContext(AppContext);\n  useEffect(() => {\n    if (!isFetchingList) {\n      setIsFetchingList(true);\n      getConnections();\n    }\n    return () => {\n      // cleanup\n    };\n  });\n  const getConnections = () => {\n    try {\n      API.User.getConnections().then(resp => {\n        setConnections(resp);\n      });\n    } catch (error) {\n      alert(error.msg || `Unexpected error while fetching your connections! Please try again`);\n    }\n  };\n  const search = async _ => {\n    try {\n      let user = await API.User.searchUser({ searchKey });\n      setSearchResult(user);\n      console.log({ user });\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  const addConnection = async _ => {\n    try {\n      let resp = await API.User.addConnection({ connectionId: searchResult._id });\n      await getConnections();\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  const removeConnection = async id => {\n    try {\n      let resp = await API.User.removeConnection({ connectionId: id });\n      await getConnections();\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  return (\n    <div>\n      <h3>Connections</h3>\n      <h5>Search</h5>\n      <input type=\"text\" placeholder=\"Search username/email\" onChange={e => setSearchKey(e.target.value)} value={searchKey} />\n      <button type=\"button\" onClick={search}>\n        Search\n      </button>\n      {searchResult ? (\n        <div>\n          <hr />\n          <div>\n            Username: {searchResult.username} Email: {searchResult.email}\n          </div>\n          {!connections.find(c => {\n            console.log(c._id, searchResult._id);\n            return c._id === searchResult._id;\n          }) ? (\n            <button type=\"button\" onClick={addConnection}>\n              Add Connection\n            </button>\n          ) : (\n            'Connected'\n          )}\n          <hr />\n        </div>\n      ) : null}\n      <hr/>\n      <h5>My Connections</h5>\n      <hr />\n      {connections.map(c => (\n        <Fragment key={c._id}>\n          <div>\n            Username: {c.username} Email: {c.email}\n          </div>\n          <button id=\"call-button\" type=\"button\" onClick={_ => playVideoFromCamera(c.username)}>\n            Call\n          </button>\n          <button id=\"remove-connection-button\" type=\"button\" onClick={_ => removeConnection(c._id)}>\n            Remove Connection\n          </button>\n          <hr />\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, Fragment } from 'react';\nimport Call from '../Call';\nimport Connections from '../Connections';\nimport AppContext from '../../AppContext';\nimport './style.css';\nimport Home from '../Home';\n\nexport default () => {\n  const [isInit, setIsInit] = useState(false);\n  const [isOnCall, setIsOnCall] = useState(false);\n  const context = useContext(AppContext);\n  let otherUser = '';\n  const logout = async () => {\n    try {\n      await context.API.Auth.logout();\n      window.location.href = '/';\n    } catch (error) {\n      alert(`Sorry, an unexpected error occured!`);\n      console.error(error);\n    }\n  };\n  const {\n    data: { loggedInUser },\n  } = useContext(AppContext);\n  // Get video stream\n  const openMediaDevices = async constraints => {\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  };\n  // get list of cameras/devices\n  async function getConnectedDevices(type) {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(d => d.kind === type);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera List. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  }\n  // update the selection list with all cameras available\n  function updateCameraList(cameras) {\n    try {\n      const listElement = document.querySelector('select#availableCameras');\n      listElement.innerHTML = '';\n      cameras\n        .map(camera => {\n          const cameraOption = document.createElement('option');\n          cameraOption.label = camera.label;\n          cameraOption.value = camera.deviceId;\n          return cameraOption;\n        })\n        .forEach(cameraOption => {\n          listElement.add(cameraOption);\n        });\n    } catch (error) {\n      console.error(error);\n      alert(`Unexpected error occured!`);\n    }\n  }\n  // Open camera stream with constraints\n  async function openCamera(cameraId, minWidth, minHeight) {\n    try {\n      const constraints = {\n        audio: { echoCancellation: true },\n        video: {\n          deviceId: cameraId,\n          width: { min: minWidth },\n          height: { min: minHeight },\n        },\n      };\n      return await openMediaDevices(constraints);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera List. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  }\n  // Display the local stream in UI\n  const playVideoFromCamera = async username => {\n    otherUser = username;\n    try {\n      setIsOnCall(true);\n      const cameraId = document.querySelector('select#availableCameras').value;\n      const stream = await openCamera(cameraId, 480, 240);\n      const videoElement = document.querySelector('video#self-video');\n      videoElement.srcObject = stream;\n      makeCall(stream);\n    } catch (error) {\n      console.error(error);\n      alert(`Unexpected error occured!`);\n    }\n  };\n\n  /* Signalling */\n\n  async function makeCall(stream) {\n    try {\n      window.caller = true;\n      // Create callerPC and attach stream\n      const configuration = {\n        iceServers: [\n          {\n            urls: 'stun:stun.l.google.com:19302',\n          },\n        ],\n      };\n      const peerConnection = new RTCPeerConnection(configuration);\n      document.querySelector('#disconnect').addEventListener('click', () => {\n        peerConnection.close();\n      });\n      peerConnection.addStream(stream);\n      if (peerConnection.getSenders) {\n        // TODO\n        // For DTMF\n        let dtmfSender = peerConnection.getSenders()[0].dtmf;\n        console.log({ dtmfSender });\n      }\n      let selfCandidate = '';\n      peerConnection.addEventListener('icecandidate', event => {\n        if (event.candidate) {\n          selfCandidate = event.candidate.candidate;\n          const connectWith = otherUser;\n          window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: connectWith.value });\n        }\n      });\n      const remoteStream = new MediaStream();\n      const videoElement = document.querySelector('video#other-video');\n      videoElement.srcObject = remoteStream;\n      peerConnection.addEventListener('track', track => {\n        console.log({ caller: { track } });\n        remoteStream.addTrack(track.track, remoteStream);\n      });\n      peerConnection.addEventListener('iceconnectionstatechange', () => {\n        if (\n          peerConnection.iceConnectionState === 'failed' ||\n          peerConnection.iceConnectionState === 'disconnected' ||\n          peerConnection.iceConnectionState === 'closed'\n        ) {\n          setIsOnCall(false);\n          peerConnection.close();\n        }\n      });\n      window.socket.on('iceCandidate', async candidate => {\n        if (candidate.candidate === selfCandidate) {\n          console.log('same person');\n          return;\n        }\n        await peerConnection.addIceCandidate(candidate.candidate);\n      });\n      // signalingChannel.addEventListener('message', async message => {\n      //   if(message.iceCandidate) {\n      //     try {\n      //       await peerConnection.addIceCandidate(message.addIceCandidate);\n      //     } catch (error) {\n      //     }\n      //   }\n      // })\n      window.socket.on('answer', async ({ answer }) => {\n        if (answer) {\n          console.log({ answer });\n          const remoteDesc = new RTCSessionDescription(answer);\n          await peerConnection.setRemoteDescription(remoteDesc);\n        }\n      });\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      const connectWith = otherUser;\n      console.log({ offer, connectWith });\n      window.socket.emit('offer', { offer, to: connectWith });\n\n      peerConnection.addEventListener('icecandidateerror', event => {\n        console.log({ error: event });\n        alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n      });\n    } catch (error) {\n      console.log({ error });\n      alert(`2Something went wrong. Couldn't connect the call. Please try again.`);\n    }\n  }\n\n  async function answerCall() {\n    try {\n      if (window.caller) return;\n      const configuration = {\n        iceServers: [\n          {\n            urls: 'stun:stun.l.google.com:19302',\n          },\n        ],\n      };\n      const peerConnection = new RTCPeerConnection(configuration);\n      document.querySelector('#disconnect').addEventListener('click', () => {\n        peerConnection.close();\n      });\n      peerConnection.addEventListener('iceconnectionstatechange', () => {\n        if (\n          peerConnection.iceConnectionState === 'failed' ||\n          peerConnection.iceConnectionState === 'disconnected' ||\n          peerConnection.iceConnectionState === 'closed'\n        ) {\n          setIsOnCall(false);\n          peerConnection.close();\n        }\n      });\n      // let stream = await navigator.mediaDevices.getUserMedia({audio: true, video: true});\n      const selfVideoElement = document.querySelector('video#self-video');\n      const cameraId = document.querySelector('select#availableCameras').value;\n      const stream = await openCamera(cameraId, 480, 240);\n      peerConnection.addStream(stream);\n      // peerConnection.addEventListener('icecandidate', event => {\n      //   if (event.candidate) {\n      //     // console.log(`ICE Candidate:`, event.candidate, window.socket.emit)\n      //     selfCandidate = event.candidate.candidate;\n      //     const connectWith = document.querySelector('#other-username');\n      //     window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: connectWith.value });\n      //   }\n      // });\n      const remoteStream = new MediaStream();\n      const videoElement = document.querySelector('video#other-video');\n      videoElement.srcObject = remoteStream;\n      peerConnection.addEventListener('track', track => {\n        console.log({ answerer: { track } });\n\n        remoteStream.addTrack(track.track, remoteStream);\n      });\n      let selfCandidate = '';\n      window.socket.on('offer', async ({ offer, from }) => {\n        console.log({ from, offer });\n        if (offer) {\n          peerConnection.addEventListener('icecandidate', event => {\n            if (event.candidate) {\n              // console.log(`ICE Candidate:`, event.candidate, window.socket.emit)\n              selfCandidate = event.candidate.candidate;\n              const connectWith = document.querySelector('#other-username');\n              window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: from });\n            }\n          });\n          peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n          document.querySelector('#caller-details').innerHTML = from + ' calling';\n          document.querySelector('#answer').addEventListener('click', async () => {\n            setIsOnCall(true);\n            selfVideoElement.srcObject = stream;\n            const answer = await peerConnection.createAnswer();\n            await peerConnection.setLocalDescription(answer);\n            const connectWith = document.querySelector('#other-username');\n            window.socket.emit('answer', { answer, to: from });\n            document.querySelector('#caller-details').innerHTML = '';\n          });\n        }\n      });\n      peerConnection.addEventListener('icecandidateerror', event => {\n        console.log({ error: event });\n        alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n      });\n    } catch (error) {\n      console.log({ error });\n      alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n    }\n  }\n  // Initialize\n  async function init() {\n    try {\n      // document.querySelector('button#start').addEventListener('click', playVideoFromCamera);\n      const videoCameras = await getConnectedDevices('videoinput');\n      updateCameraList(videoCameras);\n      navigator.mediaDevices.addEventListener('devicechange', event => {\n        const newCameraList = getConnectedDevices('video');\n        updateCameraList(newCameraList);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  useEffect(() => {\n    console.log({ loggedInUser });\n    if (loggedInUser && !isInit) {\n      setIsInit(true);\n      let hidden = ['start', 'self-video', 'other-video', 'availableCameras', 'other-username'];\n      let show = ['submit', 'username'];\n      window.socket = window.io('https://mubashir-video-chat.herokuapp.com/');\n      // let submitInput = document.querySelector('button#submit');\n      // submitInput.addEventListener('click', () => {\n      //   let usernameInput = document.querySelector('input#username');\n      //   console.log({ username: usernameInput.value });\n      // });\n      window.socket.on('invalid_registration', message => {\n        alert(message);\n      });\n      window.socket.on('invalid_message', message => {\n        // hidden.map(id => {\n        //   document.querySelector('#' + id).hidden = true;\n        // });\n        // show.map(id => {\n        //   document.querySelector('#' + id).hidden = false;\n        // });\n        // alert(message);\n      });\n      window.socket.on('successful_registration', message => {\n        // hidden.map(id => {\n        //   document.querySelector('#' + id).style.visibility = 'visible';\n        // });\n        // show.map(id => {\n        //   document.querySelector('#' + id).style.visibility = 'hidden';\n        // });\n        alert(message);\n      });\n      window.socket.emit('register', loggedInUser.username);\n      // hidden.map(id => {\n      //   document.querySelector('#' + id).style.visibility = 'hidden';\n      // });\n      init();\n      answerCall();\n    }\n    return () => {};\n  });\n  return (\n    <Fragment>\n      <Home />\n      <div className=\"connect-container\">\n        <div className=\"sidebar\">\n          <button id=\"logout-btn\" onClick={logout}>\n            Logout\n          </button>\n          <Connections className={isOnCall ? 'hidden' : ''} playVideoFromCamera={playVideoFromCamera} />\n        </div>\n        <div>\n          <Call playVideoFromCamera={playVideoFromCamera} isOnCall={isOnCall} />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Call from './pages/Call';\nimport AuthRedirect from './components/HOC/AuthRedirect';\nimport Connections from './pages/Connections';\nimport MainView from './pages/MainView';\n\nexport default props => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\"  component={Home} exact/>\n        <Route path=\"/login\" component={Login}  exact/>\n        <Route path=\"/register\" component={Register}  exact/>\n        <Route path=\"/call\" exact>\n          <AuthRedirect>\n            <Call />\n          </AuthRedirect>\n        </Route>\n        <Route path=\"/connections\" exact>\n          <AuthRedirect>\n            <Connections />\n          </AuthRedirect>\n        </Route>\n        <Route path=\"/connect\" exact>\n          <AuthRedirect>\n            <MainView />\n          </AuthRedirect>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from './Routes';\nimport AppContext from './AppContext';\nimport { Auth, User } from './apis';\nimport AnswerCall from './components/Common/AnswerCall';\n\nfunction App() {\n  const [isCheckingLogin, setIsCheckingLogin] = useState(false);\n  const [isCheckedLogin, setIsCheckedLogin] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const login = async (...data) => {\n    let res = await Auth.login(...data);\n    let resp = await Auth.me(...data);\n    setIsLoggedIn(true);\n    setLoggedInUser(resp && resp.user || {});\n    return res;\n  };\n  const API = { Auth: { ...Auth, login }, User };\n  useEffect(() => {\n    console.log('render..');\n    if (!isCheckingLogin) {\n      console.log('checking');\n      setIsCheckingLogin(true);\n      try {\n        let promise = Auth.me()\n          .then(res => {\n            setLoggedInUser(res && res.user || {});\n            setIsLoggedIn(true);\n            setIsCheckedLogin(true);\n          })\n          .catch(e => {\n            setIsCheckedLogin(true);\n            // setIsLoggedIn(false);\n          });\n      } catch (error) {}\n    }\n    return () => {\n      // cleanup\n      console.log('unmounting');\n    };\n  }, [1]);\n  return (\n    <AppContext.Provider value={{ API, data: { loggedInUser }, isCheckedLogin, isLoggedIn }}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}