{"version":3,"sources":["logo.svg","apis/auth/index.js","apis/user/index.js","AppContext.js","pages/Home/index.js","pages/Login/index.js","pages/Register/index.js","pages/Call/index.js","components/HOC/AuthRedirect.js","pages/Connections/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","defaults","withCredentials","headers","crossDomain","credentials","options","url","document","URL","split","length","includes","login","params","a","method","data","JSON","stringify","resp","response","register","me","console","log","error","getConnections","userId","addConnection","connectionId","removeConnection","searchUser","React","createContext","useContext","AppContext","loggedInUser","username","useState","setUsername","password","setPassword","API","isLoggedIn","isCheckedLogin","submit","Auth","alert","msg","to","type","placeholder","onChange","e","target","value","onClick","_","email","setEmail","confirmPassword","setConfirmPassword","isInit","setIsInit","isOnCall","setIsOnCall","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","getConnectedDevices","enumerateDevices","devices","filter","d","kind","updateCameraList","cameras","listElement","querySelector","innerHTML","map","camera","cameraOption","createElement","label","deviceId","forEach","add","openCamera","cameraId","minWidth","minHeight","audio","echoCancellation","video","width","min","height","playVideoFromCamera","stream","srcObject","makeCall","window","caller","peerConnection","RTCPeerConnection","iceServers","urls","addEventListener","close","addStream","getSenders","dtmfSender","dtmf","selfCandidate","event","candidate","connectWith","socket","emit","remoteStream","MediaStream","track","addTrack","iceConnectionState","on","addIceCandidate","answer","remoteDesc","RTCSessionDescription","setRemoteDescription","createOffer","offer","setLocalDescription","selfVideoElement","answerer","from","createAnswer","useEffect","io","usernameInput","message","init","answerCall","className","id","name","autoPlay","playsInLine","controls","props","children","isFetchingList","setIsFetchingList","connections","setConnections","searchKey","setSearchKey","searchResult","setSearchResult","User","then","search","user","_id","find","c","key","path","component","Home","exact","Login","Register","AuthRedirect","Call","Connections","App","isCheckingLogin","setIsCheckingLogin","setIsCheckedLogin","setIsLoggedIn","setLoggedInUser","res","catch","Provider","Routes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da66fa72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\naxios.defaults.withCredentials = true;\nlet headers = {\n  'Content-Type': 'application/json',\n  crossDomain: true,\n  credentials: 'cross-origin'\n}\nlet options = {\n  withCredentials: true,\n  credentials: 'same-origin'\n}\nlet url = document.URL.split('/');\nif(url.length > 2 && url[2].includes('localhost')) {\n  url = '';\n} else {\n  url = 'https://mubashir-video-chat.herokuapp.com'\n}\nurl = '/api'\nexport const login = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/login',\n      method: 'POST',\n      headers,\n      data: JSON.stringify(params),\n      ...options\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const register = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/register',\n      method: 'POST',\n      headers,\n      data: JSON.stringify(params),\n      ...options\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const me = async params => {\n  try {\n    let resp = await axios({\n      url: url + '/me',\n      method: 'get',\n      headers,\n      ...options\n    });\n    let { data } = resp;\n    return data;\n    \n  } catch (error) {\n    console.log({error})\n    // if(error.response && error.response.status === 401)\n    //   window.location.href = '/login'\n    throw error.response.data;\n  }\n};\nexport default {\n  me,\n  login,\n  register\n}","import axios from 'axios';\naxios.defaults.withCredentials = true;\nlet headers = {\n  'Content-Type': 'application/json',\n  crossDomain: true,\n  credentials: 'cross-origin',\n};\nlet options = {\n  withCredentials: true,\n  credentials: 'same-origin',\n};\nlet url = document.URL.split('/');\nif(url.length > 2 && url[2].includes('localhost')) {\n  url = '';\n} else {\n  url = 'https://mubashir-video-chat.herokuapp.com'\n}\nurl = '/api'\nconst getConnections = async userId => {\n  try {\n    let resp = await axios({\n      url: url + '/connection',\n      method: 'GET',\n      headers,\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst addConnection = async ({ connectionId }) => {\n  try {\n    let resp = await axios({\n      url: url + '/user/addConnection',\n      method: 'PUT',\n      headers,\n      data: JSON.stringify({ connectionId }),\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst removeConnection = async ({ connectionId }) => {\n  try {\n    let resp = await axios({\n      url: url + '/user/removeConnection',\n      method: 'PUT',\n      headers,\n      data: JSON.stringify({ connectionId }),\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst searchUser = async params => {\n  console.log({ params });\n  try {\n    let resp = await axios({\n      url: url + '/user/search',\n      method: 'GET',\n      headers,\n      params,\n      ...options,\n    });\n    let { data } = resp;\n    return data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport default {\n  getConnections,\n  addConnection,\n  removeConnection,\n  searchUser,\n};\n","import React from 'react';\nimport API from './apis';\nexport default React.createContext({});\n","import React, { useContext } from 'react';\nimport { me } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nexport default () => {\n  const {\n    data: { loggedInUser = {} },\n  } = useContext(AppContext);\n  return <div>Welcome {loggedInUser.username}</div>;\n};\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import { login, me } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nexport default () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { API, isLoggedIn, isCheckedLogin } = useContext(AppContext);\n  const submit = async data => {\n    console.log('submit');\n    try {\n      let resp = await API.Auth.login(data);\n      alert(resp.msg);\n    } catch (error) {\n      console.log({ error });\n      alert(error.msg);\n    }\n  };\n  return (\n    <div>\n      {isCheckedLogin ? (\n        isLoggedIn ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Fragment>\n            <h3>Login</h3>\n            <div>\n              <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} value={username}></input>\n              <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password}></input>\n            </div>\n            <button type=\"button\" onClick={_ => submit({ username, password })}>\n              Login\n            </button>\n          </Fragment>\n        )\n      ) : (\n        'loading'\n      )}\n    </div>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { register } from '../../apis/auth';\nimport AppContext from '../../AppContext';\nexport default () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const { API } = useContext(AppContext);\n  const submit = async data => {\n    try {\n      let resp = await API.Auth.register(data);\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg);\n    }\n  };\n  return (\n    <div>\n      <h3>Register</h3>\n      <div>\n        <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} value={username}></input>\n        <input type=\"email\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)} value={email}></input>\n      </div>\n      <div>\n        <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password}></input>\n        <input\n          type=\"password\"\n          placeholder=\"Repeat Password\"\n          onChange={e => setConfirmPassword(e.target.value)}\n          value={confirmPassword}\n        ></input>\n      </div>\n      <div>{password === confirmPassword ? 'Passwords match' : 'Password do not match'}</div>\n      <button type=\"button\" onClick={_ => submit({ username, password, email })}>\n        Signup\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './style.css';\n\nexport default () => {\n  const [isInit, setIsInit] = useState(false);\n  const [isOnCall, setIsOnCall] = useState(false);\n  // Get video stream\n  const openMediaDevices = async constraints => {\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  };\n  // get list of cameras/devices\n  async function getConnectedDevices(type) {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(d => d.kind === type);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera List. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  }\n  // update the selection list with all cameras available\n  function updateCameraList(cameras) {\n    try {\n      const listElement = document.querySelector('select#availableCameras');\n      listElement.innerHTML = '';\n      cameras\n        .map(camera => {\n          const cameraOption = document.createElement('option');\n          cameraOption.label = camera.label;\n          cameraOption.value = camera.deviceId;\n          return cameraOption;\n        })\n        .forEach(cameraOption => {\n          listElement.add(cameraOption);\n        });\n    } catch (error) {\n      console.error(error);\n      alert(`Unexpected error occured!`);\n    }\n  }\n  // Open camera stream with constraints\n  async function openCamera(cameraId, minWidth, minHeight) {\n    try {\n      const constraints = {\n        audio: { echoCancellation: true },\n        video: {\n          deviceId: cameraId,\n          width: { min: minWidth },\n          height: { min: minHeight },\n        },\n      };\n      return await openMediaDevices(constraints);\n    } catch (error) {\n      console.error(error);\n      alert(`Couldn't get Camera List. Please ensure camera permissions are granted for the browser and for the website.`);\n    }\n  }\n  // Display the local stream in UI\n  const playVideoFromCamera = async () => {\n    try {\n      setIsOnCall(true);\n      const cameraId = document.querySelector('select#availableCameras').value;\n      const stream = await openCamera(cameraId, 480, 240);\n      const videoElement = document.querySelector('video#self-video');\n      videoElement.srcObject = stream;\n      makeCall(stream);\n    } catch (error) {\n      console.error(error);\n      alert(`Unexpected error occured!`);\n    }\n  };\n\n  /* Signalling */\n\n  async function makeCall(stream) {\n    try {\n      window.caller = true;\n      // Create callerPC and attach stream\n      const configuration = {\n        iceServers: [\n          {\n            urls: 'stun:stun.l.google.com:19302',\n          },\n        ],\n      };\n      const peerConnection = new RTCPeerConnection(configuration);\n      document.querySelector('#disconnect').addEventListener('click', () => {\n        peerConnection.close();\n      });\n      peerConnection.addStream(stream);\n      if (peerConnection.getSenders) {\n        // TODO\n        // For DTMF\n        let dtmfSender = peerConnection.getSenders()[0].dtmf;\n        console.log({ dtmfSender });\n      }\n      let selfCandidate = '';\n      peerConnection.addEventListener('icecandidate', event => {\n        if (event.candidate) {\n          selfCandidate = event.candidate.candidate;\n          const connectWith = document.querySelector('#other-username');\n          window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: connectWith.value });\n        }\n      });\n      const remoteStream = new MediaStream();\n      const videoElement = document.querySelector('video#other-video');\n      videoElement.srcObject = remoteStream;\n      peerConnection.addEventListener('track', track => {\n        console.log({ caller: { track } });\n        remoteStream.addTrack(track.track, remoteStream);\n      });\n      peerConnection.addEventListener('iceconnectionstatechange', () => {\n        if (\n          peerConnection.iceConnectionState === 'failed' ||\n          peerConnection.iceConnectionState === 'disconnected' ||\n          peerConnection.iceConnectionState === 'closed'\n        ) {\n          setIsOnCall(false);\n          peerConnection.close();\n        }\n      });\n      window.socket.on('iceCandidate', async candidate => {\n        if (candidate.candidate === selfCandidate) {\n          console.log('same person');\n          return;\n        }\n        await peerConnection.addIceCandidate(candidate.candidate);\n      });\n      // signalingChannel.addEventListener('message', async message => {\n      //   if(message.iceCandidate) {\n      //     try {\n      //       await peerConnection.addIceCandidate(message.addIceCandidate);\n      //     } catch (error) {\n      //     }\n      //   }\n      // })\n      window.socket.on('answer', async ({ answer }) => {\n        if (answer) {\n          console.log({ answer });\n          const remoteDesc = new RTCSessionDescription(answer);\n          await peerConnection.setRemoteDescription(remoteDesc);\n        }\n      });\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      const connectWith = document.querySelector('#other-username');\n      console.log({ offer });\n      window.socket.emit('offer', { offer, to: connectWith.value });\n\n      peerConnection.addEventListener('icecandidateerror', event => {\n        console.log({ error: event });\n        alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n      });\n    } catch (error) {\n      console.log({ error });\n      alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n    }\n  }\n\n  async function answerCall() {\n    try {\n      if (window.caller) return;\n      const configuration = {\n        iceServers: [\n          {\n            urls: 'stun:stun.l.google.com:19302',\n          },\n        ],\n      };\n      const peerConnection = new RTCPeerConnection(configuration);\n      document.querySelector('#disconnect').addEventListener('click', () => {\n        peerConnection.close();\n      });\n      peerConnection.addEventListener('iceconnectionstatechange', () => {\n        if (\n          peerConnection.iceConnectionState === 'failed' ||\n          peerConnection.iceConnectionState === 'disconnected' ||\n          peerConnection.iceConnectionState === 'closed'\n        ) {\n          setIsOnCall(false);\n          peerConnection.close();\n        }\n      });\n      // let stream = await navigator.mediaDevices.getUserMedia({audio: true, video: true});\n      const selfVideoElement = document.querySelector('video#self-video');\n      const cameraId = document.querySelector('select#availableCameras').value;\n      const stream = await openCamera(cameraId, 480, 240);\n      peerConnection.addStream(stream);\n      // peerConnection.addEventListener('icecandidate', event => {\n      //   if (event.candidate) {\n      //     // console.log(`ICE Candidate:`, event.candidate, window.socket.emit)\n      //     selfCandidate = event.candidate.candidate;\n      //     const connectWith = document.querySelector('#other-username');\n      //     window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: connectWith.value });\n      //   }\n      // });\n      const remoteStream = new MediaStream();\n      const videoElement = document.querySelector('video#other-video');\n      videoElement.srcObject = remoteStream;\n      peerConnection.addEventListener('track', track => {\n        console.log({ answerer: { track } });\n  \n        remoteStream.addTrack(track.track, remoteStream);\n      });\n      let selfCandidate = '';\n      window.socket.on('offer', async ({ offer, from }) => {\n        console.log({ from, offer });\n        if (offer) {\n          peerConnection.addEventListener('icecandidate', event => {\n            if (event.candidate) {\n              // console.log(`ICE Candidate:`, event.candidate, window.socket.emit)\n              selfCandidate = event.candidate.candidate;\n              const connectWith = document.querySelector('#other-username');\n              window.socket.emit('new-ice-candidate', { candidate: event.candidate, to: from });\n            }\n          });\n          peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n          document.querySelector('#caller-details').innerHTML = from + ' calling';\n          document.querySelector('#answer').addEventListener('click', async () => {\n            setIsOnCall(true);\n            selfVideoElement.srcObject = stream;\n            const answer = await peerConnection.createAnswer();\n            await peerConnection.setLocalDescription(answer);\n            const connectWith = document.querySelector('#other-username');\n            window.socket.emit('answer', { answer, to: from });\n            document.querySelector('#caller-details').innerHTML = '';\n          });\n        }\n      });\n      peerConnection.addEventListener('icecandidateerror', event => {\n        console.log({ error: event });\n        alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n      });\n    } catch (error) {\n      console.log({ error });\n      alert(`Something went wrong. Couldn't connect the call. Please try again.`);\n    }\n  }\n  // Initialize\n  async function init() {\n    try {\n      document.querySelector('button#start').addEventListener('click', playVideoFromCamera);\n      const videoCameras = await getConnectedDevices('videoinput');\n      updateCameraList(videoCameras);\n      navigator.mediaDevices.addEventListener('devicechange', event => {\n        const newCameraList = getConnectedDevices('video');\n        updateCameraList(newCameraList);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  useEffect(() => {\n    if (!isInit) {\n      setIsInit(true);\n      let hidden = ['start', 'self-video', 'other-video', 'availableCameras', 'other-username'];\n      let show = ['submit', 'username'];\n      window.socket = window.io('https://mubashir-video-chat.herokuapp.com/');\n      let submitInput = document.querySelector('button#submit');\n      submitInput.addEventListener('click', () => {\n        let usernameInput = document.querySelector('input#username');\n        console.log({ username: usernameInput.value });\n        window.socket.emit('register', usernameInput.value);\n      });\n      // hidden.map(id => {\n      //   document.querySelector('#' + id).style.visibility = 'hidden';\n      // });\n      window.socket.on('invalid_registration', message => {\n        alert(message);\n      });\n      window.socket.on('invalid_message', message => {\n        // hidden.map(id => {\n        //   document.querySelector('#' + id).hidden = true;\n        // });\n        // show.map(id => {\n        //   document.querySelector('#' + id).hidden = false;\n        // });\n        // alert(message);\n      });\n      window.socket.on('successful_registration', message => {\n        // hidden.map(id => {\n        //   document.querySelector('#' + id).style.visibility = 'visible';\n        // });\n        // show.map(id => {\n        //   document.querySelector('#' + id).style.visibility = 'hidden';\n        // });\n        alert(message);\n      });\n      init();\n      answerCall();\n    }\n    return () => {};\n  });\n  return (\n    <div>\n      <input className=\"padding\" id=\"username\" type=\"text\" placeholder=\"Select your username\" />\n      <button id=\"submit\" placeholder=\"username\">\n        Submit\n      </button>\n      <div className={isOnCall ? 'padding hidden' : 'padding'}>\n        <select name=\"\" id=\"availableCameras\" placeholder=\"Choose camera\"></select>\n      </div>\n      <div className={isOnCall ? 'padding hidden' : 'padding'}>\n        <input id=\"other-username\" type=\"text\" placeholder=\"Connect with\" />\n        <button id=\"start\">Start</button>\n      </div>\n      <div id=\"caller-details\"></div>\n      <button id=\"answer\">Answer</button>\n      <div className={isOnCall ? '' : 'hidden'}>\n        <video id=\"self-video\" autoPlay playsInLine controls=\"false\"></video>\n        <video id=\"other-video\" autoPlay playsInLine controls=\"false\"></video>\n        <button id=\"disconnect\">Disconnect</button>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from \"../../AppContext\";\n\nexport default props => {\n  const { isCheckedLogin, isLoggedIn } = useContext(AppContext);\n  // return 'loading';\n  return isCheckedLogin ? isLoggedIn ? <Fragment>{props.children}</Fragment> : <Redirect to=\"/login\" /> : 'loading';\n};\n","import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport AppContext from '../../AppContext';\nexport default () => {\n  const [isFetchingList, setIsFetchingList] = useState(false);\n  const [connections, setConnections] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchResult, setSearchResult] = useState('');\n  const {\n    API,\n    data: { loggedInUser },\n  } = useContext(AppContext);\n  useEffect(() => {\n    if (!isFetchingList) {\n      setIsFetchingList(true);\n      getConnections();\n    }\n    return () => {\n      // cleanup\n    };\n  });\n  const getConnections = () => {\n    try {\n      API.User.getConnections().then(resp => {\n        setConnections(resp);\n      });\n    } catch (error) {\n      alert(error.msg || `Unexpected error while fetching your connections! Please try again`);\n    }\n  };\n  const search = async _ => {\n    try {\n      let user = await API.User.searchUser({ searchKey });\n      setSearchResult(user);\n      console.log({ user });\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  const addConnection = async _ => {\n    try {\n      let resp = await API.User.addConnection({ connectionId: searchResult._id });\n      await getConnections();\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  const removeConnection = async id => {\n    try {\n      let resp = await API.User.removeConnection({ connectionId: id });\n      await getConnections();\n      alert(resp.msg);\n    } catch (error) {\n      alert(error.msg || `Unexpected error occured!`);\n    }\n  };\n  return (\n    <div>\n      <h3>Connections</h3>\n      <h5>Search</h5>\n      <input type=\"text\" placeholder=\"Search username/email\" onChange={e => setSearchKey(e.target.value)} value={searchKey} />\n      <button type=\"button\" onClick={search}>\n        Search\n      </button>\n      {searchResult ? (\n        <div>\n          <hr />\n          <div>\n            Username: {searchResult.username} Email: {searchResult.email}\n          </div>\n          {!connections.find(c => {\n            console.log(c._id, searchResult._id);\n            return c._id === searchResult._id;\n          }) ? (\n            <button type=\"button\" onClick={addConnection}>\n              Add Connection\n            </button>\n          ) : (\n            'Connected'\n          )}\n          <hr />\n        </div>\n      ) : null}\n      <h5>My Connections</h5>\n      <hr />\n      {connections.map(c => (\n        <Fragment key={c._id}>\n          <div>\n            Username: {c.username} Email: {c.email}\n          </div>\n          <button type=\"button\" onClick={_ => removeConnection(c._id)}>\n            Remove Connection\n          </button>\n          <hr />\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Call from './pages/Call';\nimport AuthRedirect from './components/HOC/AuthRedirect';\nimport Connections from './pages/Connections';\n\nexport default props => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\"  component={Home} exact/>\n        <Route path=\"/login\" component={Login}  exact/>\n        <Route path=\"/register\" component={Register}  exact/>\n        <Route path=\"/call\" exact>\n          <AuthRedirect>\n            <Call />\n          </AuthRedirect>\n        </Route>\n        <Route path=\"/connections\" exact>\n          <AuthRedirect>\n            <Connections />\n          </AuthRedirect>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from './Routes';\nimport AppContext from './AppContext';\nimport { Auth, User } from './apis';\n\nfunction App() {\n  const [isCheckingLogin, setIsCheckingLogin] = useState(false);\n  const [isCheckedLogin, setIsCheckedLogin] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const login = async (...data) => {\n    let res = await Auth.login(...data);\n    let resp = await Auth.me(...data);\n    setIsLoggedIn(true);\n    setLoggedInUser(resp && resp.user || {});\n    return res;\n  };\n  const API = { Auth: { ...Auth, login }, User };\n  useEffect(() => {\n    console.log('render..');\n    if (!isCheckingLogin) {\n      console.log('checking');\n      setIsCheckingLogin(true);\n      try {\n        let promise = Auth.me()\n          .then(res => {\n            setLoggedInUser(res && res.user || {});\n            setIsLoggedIn(true);\n            setIsCheckedLogin(true);\n          })\n          .catch(e => {\n            setIsCheckedLogin(true);\n            // setIsLoggedIn(false);\n          });\n      } catch (error) {}\n    }\n    return () => {\n      // cleanup\n      console.log('unmounting');\n    };\n  }, [1]);\n  return (\n    <AppContext.Provider value={{ API, data: { loggedInUser }, isCheckedLogin, isLoggedIn }}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}